[{"browse":"Community","content":" Event Details The second event of the Android Worldwide group of communities happened on April 27th, 2021. Android Worldwide is an initiative by various communities around the globe to bring like minded folks together to learn about the latest in Android and have fun doing so. The last event we organized was in January 2021, which was the first event of the series. We heard speakers talk on various topics like using Joda time, reactive programming with Kotlin Flows, library development on Android to name a few. The response from communities was amazing and we joined hands again in April with more talks for everyone.\n Over 30 communities are a part of the Android Worldwide group and we had over 780 developers register for the event!\n Participating communities    \u0026ndash; \u0026ndash; \u0026ndash;     Android Budapest Android Developer Group Poznan Android Serbia   AndroidHeads Vienna DC Android Denver Droids   GDG Android Columbus GDG Boston Android GDG Bronx   GDG Capital Region GDG Córdoba Argentina GDG Fresno   GDG Helwan GDG Kolachi GDG Los Angeles   GDG Los Angeles Android GDG Montreal GDG Mumbai   GDG Nagpur GDG New York City GDG Osijek   GDG Phoenix GDG Tbilisi GDG Toronto Android   GDG Washington Kotlin Mumbai New York Android Developers   Kotlin Hyderabad \u0026ndash; \u0026ndash;     Schedule in IST Date: 27/04/2021\n 06:00 PM: Start of Part One 06:45 PM: Making rules with Lint by Honey Sonwani 07:35 PM: Android App Bundle: from start to deployment by Julien Salvi 10:00 PM: Start of Part Two 10:45 PM: Jetpack Compose for Games \u0026amp; Animations by Wajahat Karim 11:35 PM: Mastering API Visibility in Kotlin by Márton Braun  Date: 28/04/2021 (Day 2)\n 04:15 AM: Start of Part Three 05:00 AM: Kotlin goes global by Karan Dhillon 06:30 AM: Start of Finale 07:15 AM: Unit Testing Kotlin Channels \u0026amp; Flows by Mohit Sarveiya 08:05 AM: Preview Driven Development by Rikin Marfatia  The event spanned over two days, here are the slides and recordings of each of the talks.\n Making rules with Lint with Honey Sonwani Creating our own custom rules with lint. Upsides and downsides of having lint in your project.\n   Android App Bundles: From start to deployment with Julien Salvi This publication format has been around for a while now and will be required for the new apps on the Play Store in August 2021. This session will cover all the steps to migrate your existing project in order to build and release a brand new AAB file to the Play Store. You will see the advantages and drawbacks of App Bundle. How you can easily configure your project, handle testing tracks and update your CI/CD (CircleCI, Bitrise) to deploy your optimized app with fastlane.\n   Jetpack Compose for Games \u0026amp; Animations with Wajahat Karim    Mastering API Visibility in Kotlin with Márton Braun When designing a library, minimizing your API surface - the types, methods, properties, and functions you expose to the outside world - is a great idea. This doesn’t apply to just libraries: it’s a consideration you should make for every module in a multi-module project. In this talk, we’ll look at all the ways that Kotlin lets you get your visibility just right.\n   Kotlin goes global by Karan Dhillon Explore Kotlin Multiplatform, what it is and how it is different. We will also cover a sample project during the presentation to go over how to work in a KMM project, and finish by exploring if KMM is a viable solution for a party or not.\n   Upcoming: I\u0026rsquo;ll add more talks from the events and slides as we release them over the next couple of weeks!\n Sponsors Stream was the sponsor for this event. Visit getstream.io to know more.\n Wrapping it up Thanks for joining this event. It was super fun hosting the event with Merab from GDG Tbilisi. Special thanks to Marton Braun for editing the videos of all the sessions. We will most likely assemble within the next three months to do another set of amazing events. Till then stay tuned for more! You can join our Slack workspace in the meanwhile.\n ","href":"https://siddroid.com/post/kotlin-mumbai-events/post-android-worldwide-april-2021/","title":"Android Worldwide: April 2021"},{"browse":"Projects","content":"  A library of colors, gradients and utils built using Jetpack Compose for Android  Features  A wide collection of colors from different palettes for easy access in your pet projects Provides easy gradient building functions that all your composable brushes need Just 28 KB in size! Over 450 predefined colors and endless gradients.  Color Palettes  Material Colors Flat Colors Cool Colors Dracula Colors  Color palette showcase    Cool Colors Material colors Flat colors Dracula colors             Gradient mixer showcase    Directional Gradients Directional multi color gradients          Using colors You can simply pick colors by using the container objects for each palette and profit.\nEg. MaterialColor.RED CoolColor.FIREBRICK FlatColor.EMERLAND DraculaColor.YELLOW\n Palette references  Material Colors Flat Colors Cool Colors Dracula Colors  Using Gradients Using gradients is super easy with Holi, just use GradientMixer and choose from various gradient brush generating functions.\n1. Mixing two colors GradientMixer.bottomLeftToTopRight(MaterialColor.RED,MaterialColor.GREEN) 2. Mixing more than two colors GradientMixer.topRightToBottomLeft( listOf(MaterialColor.RED, MaterialColor.GREEN, MaterialColor.PURPLE) ) 3. Reversing gradients GradientMixer.rightToLeft(FlatColor.CARROT,FlatColor.POMEGRANATE,reversed = true)  Holi\u0026rsquo;s GradientMixer is a container for gradient (Compose Brush) generating functions. These functions act as wrappers around Compose\u0026rsquo;s gradient generators so that you don\u0026rsquo;t have to figure out offset values with their directions. The idea behind this gradient mixer is easy access to gradient building.\nHow to use Holi is available on MavenCentral, declare maven central in your repositories and implement the latest version in dependencies.\nStep 1. Add to repositories allprojects { repositories { mavenCentral() } } Step 2. Add in dependencies dependencies { implementation \u0026#39;com.siddroid:holi:$latest_version\u0026#39; } Source  PatilSiddhesh/Holi  Licensing  MIT License Copyright (c) 2021 Siddhesh Patil, Siddroid.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \u0026quot;Software\u0026quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, andor sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \u0026quot;AS IS\u0026quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Disclaimer Holi uses color palettes from the reference sites, these colors / swatches are free to use. A big thanks to the maintainers for making these color palettes.\n","href":"https://siddroid.com/post/projects/holi-a-library-of-colors-for-jetpack-compose/","title":"Holi: A library of colors, gradients and utils for Jetpack Compose"},{"browse":"Community","content":"   Event Details We\u0026rsquo;re going fully online into 2021 as a community our last meetup was a global collaboration of communities with Android Worldwide. To kickstart things in the Kotlin Universe Kotlin Mumbai organized a meetup with Sebastian Aigner from Jetbrains to discuss their future plans with Kotlin/JS.\n Speaker: Sebastian Aigner, DevRel team at Jetbrains Date: 6th March 2021 Location: Online  Here\u0026rsquo;s a few words from Sebastian before you watch the session: Let’s talk about how we can use Kotlin to leverage one of the most exciting platforms of the last decade: the browser. We’ll see what it takes to get started with writing Kotlin/JS applications, and get a feeling for the ecosystem, including libraries specific to Kotlin/JS, but also multiplatform. We’ll also talk about news and plans the team at Jetbrains has to make the JavaScript target for Kotlin even better in the future. Let’s explore together!\n Video    Questions from the community  Answers are directly time stamped in the Youtube video\n  Can I start Web Dev directly with Kotlin JS or go with JS+React then return to Kotlin being an Android Developer Are there any plans to support JetBrains Compose UI development toolkit with Kotlin JS for web development? Is it possible to generate source maps for Kotlin JS Code to possibly make it easier to develop? Can we make a cross-platform App with Kotlin which runs on the web and also on ios and Android? How does Kotlin/JS compare to another multi-platform framework like flutter web? Does Kotlin/JS in a multiplatform app(full stack) support raw CSS files or we have to use Kotlin CSS DSL itself? Are there any limitations when targeting JS on the usage of Kotlin\u0026rsquo;s language features either as a part of the std library or coroutines? For eg like using flows. Any plans for Vue.js with Kotlin JS? Does this custom DSL for HTML use PSI files under the hood to generate the HTML files? or is it done differently? Is RClass specific to React components only? How does it work under the hood? Does it translate code to JS just like TypeScript does? How does Jetbrains ensure that with every release of Kotlin the functionality and compiler support for each platform remains consistent? Is Kotlin/JS stable and confident enough to make a simple frontend website? Are the website made with Kotlin/Js responsive? How will be the performance on different browsers like chrome, safari, etc? Any recommended documentation or quick snippets of code where I can easily learn about the basic components? (no libraries) How can I add an npm module whose only method returns a Promise. I haven\u0026rsquo;t been able to compile it. And all I find on docs is capitalize or camel case example. Can I host the website made in Kotlin/Js on Firebase, Netlify, etc? Are there any example GitHub projects showcasing a website or any webpage using kotlin JS and a backend? Kotlin over javascript sounds like a good payoff but kotlin over typescript doesn\u0026rsquo;t sound all that good right? Does Kotlin/js support different levels of style encapsulation like style that applies only to a particular component / some CSS specifically to the whole app? How to use styled-components? can you give any reference for that? Which is better in terms of performance react js or kotlin/js? How easy it is to make use of hardware-acceleration, maybe a GPU I have while using TensorFlow.JS?  Wrapping it up One of the most interesting meetups we have hosted, our community asked a lot of interesting questions, you can listen to Sebastian answer them in the video directly. Our organizing member Rishit Dagli did a fine job at adding timestamps in the YouTube video to make things easier for you.\n","href":"https://siddroid.com/post/post-diving-into-kotlin-js-sebastian-aigner-siddhesh-patil/","title":"Dive into Kotlin/JS with Sebastian Aigner"},{"browse":"Community","content":" Event Details I. Be the flow in a reactive world Himanshu Singh and Niharika Arora, Google Developer experts for Android talk about reactive programming and how Kotlin flows can help solve some problems with reactive programming.\nWatch the session here\n    II. Journey of Time Subhrajyoti Sen takes us through the calendar class in Java and how Joda Time makes things better.\nWatch this session here\n    This was our first global collaborative effort with other communities, thanks to Android Worldwide we have have talks like these in various timezones. Many thanks to Shalom Halbert who came up with such an initiative!\n","href":"https://siddroid.com/post/post-joda-time-kotlin-flows-android-worldwide-2021/","title":"Kotlin Mumbai x Android Worldwide"},{"browse":"Community","content":" Event Details  Speaker: Gurupreet Singh , Android Developer at Foodpanda Location: Online, Microsoft Teams   Exploring the future of Android UI with Jetpack Compose Compose is a new declarative way of making user interfaces on Android. It is changing the way app developers are designing and organizing their view related code. It\u0026rsquo;s certainly a breath of fresh air from what Android does with XMLs. In this talk Gurupreet explores the use cases of Jetpack compose and educates us on how one can quickly bootstrap a project with compose.\n Video    This was the last meetup of 2020 that we organized at Kotlin Mumbai, and it was amazing! We can\u0026rsquo;t wait to bring more talks and interesting conversations to you next year. Till then happy new year 2021 and stay tuned for more!\n ","href":"https://siddroid.com/post/post-exploring-future-of-android-with-jetpack-compose-siddhesh-patil/","title":"Kotlin Mumbai: Exploring Future of Android UI With Jetpack Compose"},{"browse":"Community","content":"  Event Details  Speaker: Mohit Sarveiya ,Google Developer Expert for Kotlin Date: 28th November 2020 Location: Online   Dissecting Coroutines The coroutines library contains many features for starting coroutines, creating Flows and Channels, and handling a mutable shared state. But, how do we use them, how do they work and what are good use cases?\nIn this talk, we will explore basic to advanced features provided by the coroutines library. We\u0026rsquo;ll look at when to use state flow, shared flow, and every type of Channel. We\u0026rsquo;ll explore lesser-known features and their use cases such as selectors and actors. Did you know combining Flows uses selectors under the hood? What are they? Mohit will share his learnings from his extensive experience in using these constructs!\n Slides   Video    That\u0026rsquo;s been it for our November meetup! It was quite interesting to understand how channels and flows work. We concluded the meetup with a Q\u0026amp;A round.\n ","href":"https://siddroid.com/post/post-dissecting-coroutines-kotlin-mumbai-nov-2020-siddhesh-patil-siddroid/","title":"Kotlin Mumbai: Dissecting Coroutines"},{"browse":"Talks","content":" Using ZSH and OHMYZSH and Command line aliases Workflows can get tedious, often at times you\u0026rsquo;ll find yourself switching between tools to accomplish your tasks. Any Android developer would be familiar with the vicious cycle that is coding, executing, commiting, pushing your changes, raising your PRs! Many a times switching branches, forking new ones and what not!\nMost of us are familiar with using Git and we have our choices of tools as well. Since the last two months, my workflows have been enjoyable and fast. Before using ZSH and command line aliases I would be resorting to tools like Sourcetree, Github GUI or the standard VCS provided in Android Studio.\nDuring a team meet I saw my CTO, Neehar at Paytm Insider use commands like \u0026ldquo;glog\u0026rdquo; \u0026ldquo;gs\u0026rdquo; etc while demonstrating a branching strategy. He went on to explain how command line aliases are making things easier for him. I was amazed, I had never thought about it. To my surprise many of my colleagues were already using ZSH or other shells with their own alias setups.\nIt made me think the amount of time I spend looking at these interfaces and switching between tools throughout the day to accomplish simple tasks.\nI setup ZSH along with OHMYZSH and made simple aliases for things like:\n switching between projects Basic git functionality like checking out branches, creating new ones, looking at statuses, reviewing logs in graph view etc creating bundles without accessing bundle tool directly  The amount of optimization you can do with your workflow is completely upto you. If you find yourself using a commandline utility a lot of times, make an alias for it!\nSetting up ZSH with OHMYZSH Setting up ZSH with OHMYZSH is super easy\nZSH can be setup via brew\nbrew install zsh  OHMYZSH installation guide you can find in their Github readme.\nSetting aliases Do the alias setup once you install OHMYZSH. To setup aliases you\u0026rsquo;ll have to find .zshrc file in your user\u0026rsquo;s root. To access this on mac just use:\nCMD + Shift + H  To access your user root in finder. Then\nCMD + Shift + .  To access your hidden files\nEdit your .zshrc file, there are sample aliases in the default file.\nEvent details This event was a cross colaboration between various communities in India like Google Developer Group Mumbai, Tensorflow User group Mumbai, Flutter Mumbai and Kotlin Mumbai of course!\nI went on to talk about commandline aliases and another co-organizer of Kotlin Mumbai, Chintan Parmar talked about contributing to Kotlin based projects during Hacktoberfest.\nPost the talk we had a productive discussion between communities about open-source contributions.\nYou can view the slides here:\n ","href":"https://siddroid.com/post/post-hacktoberfest-kotlin-mumbai-git-alias-zsh-siddhesh-patil/","title":"Hacktoberfest: Speed up your workflows with ZSH and command line aliases!"},{"browse":"Community","content":"  Event Details  Speaker: Wajahat Karim, GDE for Android \u0026amp; Carlos Mota, Organizer of GDG Coimbra Date: 26th September 2020 Location: Online   Scoped Storage on Android Scoped storage is still a sensitive subject to most of us due to the impact it had on most apps, but the most needed one! Scoped storage is one of the most important security features that has been released that empowers the user to have the final word when an app is accessing external files. In this talk, Carlos Mota is also going to share the dos and don’ts about these developments and how everything will get better at the end.\n Building a game with Jetpack Compose Although Jetpack Compose is a toolkit to create Android UI in a declarative form with the power of Kotlin language. But it can be used as a canvas for generative art, animations, or even games. In this session, we\u0026rsquo;ll take a look at the capabilities of Canvas API for Jetpack Compose and how can we implement Chrome\u0026rsquo;s T-Rex Dino game. Wajahat Karim will discuss some challenges such as game loop, game state management, infinite parallax scrolling etc. By the end of this talk, you\u0026rsquo;ll be more familiar with the concepts of Canvas in Jetpack Compose and how you can use it for games.\nWatch the entire talk on YouTube!\n   ","href":"https://siddroid.com/post/post-kotlin-mumbai-jetpack-compose-scoped-storage-on-android-2020-siddhesh-patil/","title":"Build a game with Jetpack Compose and Keep up with scoped storage on Android"},{"browse":"Community","content":"  Event Details  Speaker: Subhrajyoti Sen, Android Developer from smallcase Date: 22nd August 2020 Location: Online   Description Lint is a powerful static analysis tool that can be used to enforce coding styles and also find common bugs across a codebase. Google provides a bunch of lint checks by default for Android. On popular demand, the Lint API was extended to support non-Android Kotlin projects too.\nIn this talk, Subhrajyoti discusses some examples of custom lint checks we use on the Tickertape app to enforce out design guidelines. He will go through the source code of Android lint checking and then show how to write a custom lint rule.\nThis talk also demonstrates how to write test cases for the rules. By the end of the talk, you will be able to understand how lint works and how you can add custom lint rules to your projects.\nMissed the session? No problem! Watch the entire talk on YouTube!\n   ","href":"https://siddroid.com/post/post-august-kotlin-mumbai-2020-siddhesh-patil/","title":"Kotlin Mumbai: Building a better codebase with Lint on Android"},{"browse":"Updates","content":"   Details Publication: Times of India\nDate: 19th August 2020\nMisc: Pages 6-7, under Times Techies (currently available in Bangalore and Hyderabad editions only)\nAcknowledgements: Editorial team at Times Group, Habeeba Salim and Sujit John, Kotlinlang and Jetbrains team for enabling developers around the world with their active community support.\nRead the publication here on TOI website\n One Pager   ","href":"https://siddroid.com/post/post-siddhesh-patil-times-of-india-kotlin/","title":"How Kotlin won the language war in Android App Development"},{"browse":"Talks","content":"  Talk details Title: Building apps for Android in Kotlin\nDate: 8th August 2020\nPlatform: Google Meet\nInstitute: Vivekanand Education Society\u0026rsquo;s Institute of Technology\nLocation: Online\nAttendees: 170 + Students from Department of Computer Engineering\nPatrons: Dr.(Mrs). Nupur Giri, Head of department, Computer Engineering\nFrom Codecell: Mr. Prashant Kanade, Mr. Richard Joseph\nCoordinators: Mr.SujitKumar Singh, Ms.Tina Chandwani, Mr.Amit Chhabria, Mr.Rohan Gosalkar, Mr.Arnav Bagchi, Mr.Kunal Kotkar, Mr.Sanket Jangle, Mr.Sahil Rajpal\nHon: Shri. B.L. Boolani (President VES), Dr.(Mrs) J.M. Nair (Principal), Dr.(Mrs) M. Vijayalakshmi (Vice Principal)\n Abstract With a day one session on introduction to Kotlin the students are prepared to explore the world of Android Development. This talk is a live workshop where students build a small app for Android using Android Studio and Kotlin.\n Coverage  Overview of modern day apps Lists are important! What we are building today? App Architecture Views and Activities Preparing the data using lists and data class Views and XML editor in Android Studio Working with Gradle Code, Split and Design section in Studio 4.0 Building Views and UI Android X and Jetpack libraries Developer resources from official Android Developers references Recycler Views and ViewHolders Running an app, using logcat to debug   Slidedeck   Results Concluding the two-day workshop and talks, students were able to build their very first app using Kotlin. We explored how to work with Android Studio and learnt the basic building blocks of an Android app. The institute distributed certificates of participation to the students who attended.\n Acknowledgements I was honored to be welcomed at a prestigious institute like VESIT to speak and teach the students. This would not have been possible without the efforts of the team at CodeCell who organized the session. Special thanks to Mr.Sujitkumar Singh who was patient enough to follow this through over the last six months since February 2020 for planning this event. My humble thanks and gratitude to the faculty at VESIT and to the students who participated in the session. Talks and workshops like these enable and empower students with the right direction to their path on becoming tomorrow\u0026rsquo;s successful app developers!\n","href":"https://siddroid.com/post/talk-building-apps-for-android-in-kotlin-vesit-cmpn-siddhesh-patil/","title":"VESIT: Building Apps For Android in Kotlin"},{"browse":"Talks","content":"  Talk details Title: Getting Started With Kotlin\nDate: 7th August 2020\nPlatform: Google Meet\nInstitute: Vivekanand Education Society\u0026rsquo;s Institute of Technology\nLocation: Online\nAttendees: 170 + Students from Department of Computer Engineering\nPatrons: Dr.(Mrs). Nupur Giri, Head of department, Computer Engineering\nFrom Codecell: Mr. Prashant Kanade, Mr. Richard Joseph\nCoordinators: Mr.SujitKumar Singh, Ms.Tina Chandwani, Mr.Amit Chhabria, Mr.Rohan Gosalkar, Mr.Arnav Bagchi, Mr.Kunal Kotkar, Mr.Sanket Jangle, Mr.Sahil Rajpal\nHon: Shri. B.L. Boolani (President VES), Dr.(Mrs) J.M. Nair (Principal), Dr.(Mrs) M. Vijayalakshmi (Vice Principal)\n Abstract Kotlin empowers Android apps and enables developers to express themselves freely than any other object-oriented programming language. This introductory talk as a part of a two-day program aims to cover the basics of Kotlin.\n Coverage  Brush-up on Object-Oriented Programing Evolution of OOP Why Kotlin What is Kotlin Facts about Kotlin Interoperability \u0026amp; Tools used val and var declarations Type inference Type casting Functions in Kotlin Nullability and Null-safety Data classes and Primitive types Lists \u0026amp; Arrays if statements and flow control for loop and iteration Classes   Slidedeck   Acknowledgements A big thanks to every student who attended this session. Thanks to Mr. Richard Joseph who was kind enough to introduce me to the students and faculty. This talk went wonderfully and students who never knew Kotlin were able to grasp the concepts easily. We had a small Q\u0026amp;A at the end of day one. With this introductory session on Kotlin the students are now prepared to build their very first Android app!\n","href":"https://siddroid.com/post/talk-getting-started-with-kotlin-vesit-cmpn-siddhesh-patil/","title":"VESIT: Getting Started With Kotlin"},{"browse":"Talks","content":"  Talk details Title: Introduction to Kotlin\nPlatform: Youtube live stream\nCommunity: Kotlin Hyderabad\nLocation: Online\nAttendees: 38\nOrganizers: Rajmahendra \u0026amp; Chaitanya\nMeetup Link\nListing on Kotlinlang.org\n Abstract Kotlin is the preferred language for Android Development. With over 2 billion active users, Kotlin enables many developers to deliver software worldwide on Android. With growing number of users migrating to Kotlin, this session aims to cover basics of Kotlin and programming. The talk is intended for beginner level audience and for new comers who want to learn Kotlin.\n Coverage  Why Kotlin What is Kotlin Facts about Kotlin Interoperability \u0026amp; Tools used val and var declarations Type inference Type casting Functions in Kotlin Nullability and Null-safety Data classes and Primitive types Lists \u0026amp; Arrays if statements and flow control for loop and iteration Classes and interfaces   Slidedeck   Video    Thoughts This was my first talk on Kotlin, hope this was helpful to everyone. I\u0026rsquo;ll be doing more talks like these. Feel free to drop a comment or connect with me on other platforms!\n","href":"https://siddroid.com/post/talk-introduction-to-kotlin-siddhesh-patil-kotlin-hyderabad/","title":"Kotlin Hyderabad: Introduction to Kotlin"},{"browse":"Community","content":"  Making your app accessible for everyone is more than a “nice thing to do” It also increases the quality of your app. Products that keep accessibility in mind are more flexible and easier to use. It’s up to us to direct this step. In this talk, you’ll learn about some of the things you can do to make your app more accessible, and how it makes your product stronger. You’ll walk away with the tools you need to detect accessibility issues, increase the usability of your app, and prevent regressions.\n  Event Details  Speaker: Victoria Gonda, Senior Android Engineer at Meetup Date: 25th July 2020 Location: Online   Proceedings We started at 2:00 PM, a community introduction was done followed by an introduction of our speaker, Victoria. Accessibility is an important topic and often gets overlooked when product features are developed and UX systems are formulated. Victoria walks us through what are some of the best techniques you can follow to make your app more accessible. She asks our audience to head over to menti.com to form a word cloud around the topic. We go through some of the cases in mobile development where accessibility can be improved. She demonstrates how a good tool to find issues with accessibility is the accessibility scanner and how simple tools like these can be used to improve the overall quality of your application.\nMissed the session? No problem! Watch the entire talk on YouTube!\n   ","href":"https://siddroid.com/post/post-july-kotlin-mumbai-2020/","title":"Kotlin Mumbai: Increase Your Product Quality Through Accessibility"},{"browse":"Community","content":"  It\u0026rsquo;s July 11th and Android 11 is just around the corner! Jumping on to the bandwagon of Android 11 meetups by Google, Kotlin Mumbai and GDG MAD co-organized their first event together.\n Event Details: Series: Android 11 Meetups with Google\nSpeakers: Amrit Sanjeev and Saurabh Arora\nPlatform: Online on Google Meet\nTalk 1: What\u0026rsquo;s new in Android 11?\nTalk 2: Adapting your apps for privacy changes in Android 11\nCommunities: GDG MAD \u0026amp; Kotlin Mumbai\n What\u0026rsquo;s new in Android 11  Amrit Sanjeev, Staff Developer Advocate at Google walks us through what\u0026rsquo;s new in Android 11, including message bubbles and priority conversations, redesigned notifications, new media controls, behaviour changes and privacy features.\nTo know in detail about what\u0026rsquo;s new in Android 11 head over to the official feature list.\n Adapting your apps for privacy changes in Android 11  Saurabh Arora, Google Developer Expert for Android further talks on privacy changes in Android 11 and how to adapt existing apps to these new changes. Scoped storage enforcement, one time permissions, permission auto resseting, background location access and new foreground service types are covered in detail.\nTo know more about privacy changes refer to the official developer post here.\n We had a lot of fun co-organizing this event for everyone. Concluding the event we gave away full one year subscriptions for any Jetbrains IDE of choice to the audiences who answered some interesting questions about Android 11. Checkout upcoming Android 11 meetups here in case you want to attend them.\nRecap Watch the speaker sessions here   Thanks for joining and I hope to see everyone at our next meetup on 25th!\n","href":"https://siddroid.com/post/post-android-11-meetup-gdg-mad-kotlin-mumbai-siddhesh-patil/","title":"Android 11 Meetup: GDG MAD and Kotlin Mumbai"},{"browse":"Android","content":"If you have recently started to develop apps on Android or have been developing them from a long time, you know what context is. The same old way to access everything that the application provides, it\u0026rsquo;s resources and application\u0026rsquo;s environment. In this article we will deep dive into what context is and attempt to understand it better.\n What is context? If you look into the context class on Android Studio by hitting cmd + b you\u0026rsquo;ll see some methods like these\npublic abstract AssetManager getAssets(); public abstract Resources getResources(); public abstract PackageManager getPackageManager(); public abstract ContentResolver getContentResolver(); public abstract Looper getMainLooper(); most of these methods look familiar and I\u0026rsquo;m sure you have used these. But what is context?\nContext is an abstract class and a part of Android\u0026rsquo;s content package. Context allows us to access application\u0026rsquo;s resources, classes and for performing various operations such as launching an activity or firing intents. The implementation of this abstract class is provided by Android\u0026rsquo;s system.\nSimple right? It actually is. But if I ask you a simple question for example like what is the difference between activity context and application context, will you be able to differentiate between the two?\nContext implementation   Let\u0026rsquo;s look at each component in the above diagram in detail.\n  Context: An abstract class, part of android\u0026rsquo;s content package.\n  Android System: The OS itself\n  Context Implementation: The implementation of the abstract class on Android\u0026rsquo;s system.\n  Context Wrapper: The wrapper class that encapsulates the functionalities of the implementation\n  ContextThemeWrapper: Another wrapper which allows you to modify or replace the theme of the context.\n  Activity, Application \u0026amp; Service: What we developers get to utilize and access the resources and environment.\n  Notice how application and service don\u0026rsquo;t need a theme wrapper. Only activity does as that is where our UI magic happens.\nThings you can and can\u0026rsquo;t do with context:\n  You can start an activity from another activity. You can\u0026rsquo;t start an activity using Application context. (Since application context is unaware of the activity backstack i.e the sequence of activities)\n  You can use context to get resources, strings and layouts using resource identifiers.\n  You can get application context using getApplication() or getApplicationContext(). In broadcast receivers you can only use the later.\n  Proceed with caution!\n Don\u0026rsquo;t store activity context in view models.  Next time you make an app, you\u0026rsquo;ll have a context to what context is!\n","href":"https://siddroid.com/post/post-understanding-context-in-android-siddhesh-patil/","title":"Understanding Context in Android"},{"browse":"Community","content":"Senior Android Engineer at BYJU\u0026rsquo;s, Rivu Chakraborty gives a talk on test driven development using Spek\nEvent details Speaker: Rivu Chakraborty, BYJUs, Senior Android Engineer\nTalk: TDD using Spek\nDate: June 23rd, 2020\nLocation: Virtual\nIn case you missed it   What we covered Rivu walks us through how to do TDD (Test driven development) on repositories and viewmodels in Android. He uses Spek to demonstrate live how test driven development is done. The live demo lasted for over an hour.\nThat\u0026rsquo;s all folks! Stay tuned for more we have exciting meetups in plan for July.\n","href":"https://siddroid.com/post/post-june-kotlin-mumbai-2020/","title":"Kotlin Mumbai: TDD using Spek"},{"browse":"Community","content":"Nicola Corti from Spotify walks us through Github actions! It's time to roll up your sleeves and make production easier! Event details Speaker: Nicola Corti, Spotify, Android Infrastructure Engineer\nTalk: Devops-ify your life using Github Actions!\nDate: May 23rd, 2020\nLocation: Virtual\nIn case you missed it   What we covered Using Github actions to setup tasks for auto build, test, deploy and upload. Our community covered a wide variety of questions like artifact uploading, signing of releases and how Github Actions is different than a traditional Jenkins setup.\nWe had so much fun! Nicola took out time for the community and woke up early in the morning to match the Indian time zone. We organizers had a long 2 hour discussion with Nicola post the meetup where we discussed many topics on Android at depth.\nWhat\u0026rsquo;s more? We\u0026rsquo;re happy to announce many new meetups in the upcoming months! Stay Tuned!\n","href":"https://siddroid.com/post/post-may-kotlin-mumbai-2020/","title":"Kotlin Mumbai: Github Actions!"},{"browse":"Community","content":"Introductions \u0026amp; Introductions We recently organized our April meetup at Kotlin Mumbai. Before we deep dive into the proceedings and recap the sessions here are a few stats for you:\nDetails  Location: Online\n  Platform: Google Meet\n  Attendee count: 50-60\n  Speakers: Filip Babić and Akshay Chordiya, Google developer experts on Android\n Before we announced the speakers for the session, we posted about a guessing game on Twitter. The person who successfully guesses the two speakers for the event gets a full one year subscription to Jetbrain\u0026rsquo;s IDEs. The only hint that our members had was that the speakers are a part of the GDE program. Only one or two members from the community were able to guess the right speaker.\nWe decided that this meetup will happen on Google Meet taking inspiration from other communities like GDG MAD. Thanks to Paytm Insider for the meet setup as free Gsuite accounts only allow 25 participants at a time.\nLet\u0026rsquo;s talk about our sessions!\nIntroduction to Kotlin  Our first speaker Filip Babić takes us through the basics of kotlin. Syntax, ease of use, differences with Java, need for the language, safe calls, nullability and type inferencing are covered. This talk was aimed for our new members who are new to app development and want to get started with Kotlin. Kotlin, being the easiest of programming languages to learn is the preferred language for app development.\nCheck out the session on YouTube:\n  Go with the Kotlin Flow  Asynchronous programming is made super easy with Kotlin Flows. Flows being a part of coroutines are new hot thing in the game. Akshay Chordiya guides us through the new way to do async with Kotlin. I personally can\u0026rsquo;t wait to try flows in production once the releases are stable. Overall Flows look promising enough replacement for RX.\nCheck out the session on YouTube with the Q\u0026amp;A:\n  After thoughts Overall the sessions went well, people from around the world and not just Mumbai came to join us, which was amazing! This was our first meetup hosting a developer expert at the community, not just one but two of them. Our attendees were quite happy and excited. We received positive feedback about the talks and our community.\nIt\u0026rsquo;s almost end of April! What started as a community of tens has now over 400+ members on meetup and we are growing. We have bigger plans in May and I hope to see you guys in the next meetup. Stay tuned!\n","href":"https://siddroid.com/post/post-april-kotlin-mumbai-2020/","title":"Kotlin Mumbai: Kotlin basics and Flows"},{"browse":"Community","content":"With the current situation and lockdowns due to coronavirus, we had to roll up our sleeves and prepare for a fully online meetup.\nI have recently joined Kotlin Mumbai User Group as an organizer, a community which a part of Jetbrains communities around the globe promoting the use of Kotlin programming language.\nOur preparations for the march meetup began pretty early on and we were scheduled to host the event in the Andheri east. Little did we know that the situation was about to get worse and the entire country will be in a state of lockdown.\nA lot of talks, conferences and meetups were getting cancelled. This would have been my first year going to Droidcon India. Attending Droidcon had always been a dream, I was fully prepared but the situation would not allow it. A closed workshop which I was going to deliver to engineering students also got postponed. Hopefully in due course of time as the situation improves, a lot would be possible again (Hopefully).\nWe had to take this meetup fully online, which would be a first for all of us organizers, Subhi Pandey, Rishit Dagli and me. After hours of research and multiple team calls we decided to go with a guide posted by GDG Lisbon in the GDG Europe publication.\nHow to origanize a full remote workshop - GDG Lisbon\n Things that helped\n OBS: Open Broadcaster Software, it\u0026rsquo;s a free tool available for all platforms. Youtube livestream. Google Meet. Telegram: For communicating online with our speakers while the sessions proceeded.   How did it go?\nWe started at 10:00AM on 21st March. After about five minutes we realized that the live stream had not started, after a couple of tweaks and checks we were able to get that running in no time.\nSubhi started the session with introduction to the Kotlin Mumbai community, other organizers introduced themselves. This was my first participation in the community as an attendee and an organizer.\nWe had three speakers of which one was not able to present due to some issues, the ones that presented were:\n  Kedarnath Naik - Dagger 2 Dependency Injection. Kedarnath walked us through the usage of dependency injection, manual injection and how one can benefit from using DI for projects.      Akshay Sawant - Jetpack navigation component. Inspired by Don Felker Akshay started his Android Development career, He demonstrated the use case of jetpack component and how navigation can be made easy in Android development.     The audiences would ask questions on Youtube live chat and were answered by our speakers at the end of the session.\nOverall this was a great start amid troubled times. We were happy the session went well. Can\u0026rsquo;t wait to do our next meetup in April. We have some great speakers talking in the upcoming one, stay tuned for more and follow us on Twitter for updates.\n","href":"https://siddroid.com/post/post-march-kotlin-mumbai-2020/","title":"Kotlin Mumbai: Dagger and Jetpack Navigation"},{"browse":"Android","content":" Permissions request dialogs are a vital part of user’s experience on the app. When a user installs an application for the first time they may or may not be clear of what the app does and why the app requires a certain set of permissions for its functionality.\nMany applications show a permission request dialog and a user can choose to grant or deny a permission. Often a user may deny a certain permission which may be required for the core functionality of the app.\nWell, why are permission rationale dialog important?\n They offer the user a clear explanation on why the permission is required which may have been unclear previously when the user had denied the permission.\n In this article we’ll cover how to handle cases where a user has previously denied a permission and present them with a rationale or a reason on why the user should grant the permission by using best practices and taking advantage of shouldShowRequestPermissionRationale. Let’s get started!\nIn this example we’ll be making a simple app in Kotlin which requests permissions and presents the user with a rationale for granting a denied permission. We’ll take a case where the app requires READ_CONTACTS permission from the user.\nStep 1: Define the permission in the Manifest\n AndroidManifest.xml\n \u0026lt;uses-permission android:name=\u0026#34;android.permission.READ_CONTACTS\u0026#34;/\u0026gt;\nStep 2: Define a function that checks for the permission\nprivate fun checkContactsPermission() { if (ContextCompat.checkSelfPermission(this, android.Manifest.permission.READ_CONTACTS) != PackageManager.PERMISSION_GRANTED ) { // Check if permission is not granted  Log.d(TAG, \u0026#34;Permission for contacts is not granted\u0026#34;) // This condition only becomes true if the user has denied the permission previously  if (shouldShowRequestPermissionRationale(android.Manifest.permission.READ_CONTACTS)) { showRationaleDialog(getString(R.string.rationale_title), getString(R.string.rationale_desc), android.Manifest.permission.READ_CONTACTS, REQUEST_CONTACTS_STATE) } else { // Perform a permission check  Log.d(TAG, \u0026#34;Checking permission\u0026#34;) requestPermissions(arrayOf(android.Manifest.permission.READ_CONTACTS),REQUEST_CONTACTS_STATE) } } else { // Permission is already granted, do your magic here!  } } Here the code will perform a check if the read contacts permission is granted or not. The following cases will occur:\n First time user who is opening the app will be presented with a standard request permission dialog. A user who has denied the permission previously will be presented with a rationale dialog. User has granted the permission.  Step 3: Define your function for showing a rationale dialog\nWe can acheive this with an AlertDialog as shown in the below function\nprivate fun showRationaleDialog(title: String, message: String, permission: String, requestCode: Int) { val builder: AlertDialog.Builder = AlertDialog.Builder(this) builder.setTitle(title) .setMessage(message) .setPositiveButton(\u0026#34;Ok\u0026#34;, { dialog, which -\u0026gt; requestPermissions(arrayOf(permission), requestCode) }) builder.create().show() } We’ll also add strings for the dialog. In this example our sample app needs read contacts permission for suggesting connections or people the user may know.\n strings.xml\n \u0026lt;string name=\u0026#34;rationale_title\u0026#34;\u0026gt;We need permission to read your contacts\u0026lt;/string\u0026gt; \u0026lt;string name=\u0026#34;rationale_desc\u0026#34;\u0026gt;This app relies on read access to your contacts. We require access to this permission to find your contacts in our database and suggest people you may know. We will not store any contact info in our data base if they are not a part of our platform. For further info read our privacy policy.\u0026lt;/string\u0026gt;\nStep 4: Let’s handle the permission results\nWe’ll display a Toast message once permission has been granted or denied by overriding onPermissionResults()\noverride fun onRequestPermissionsResult(requestCode: Int, permissions: Array\u0026lt;out String\u0026gt;, grantResults:IntArray) { when (requestCode) { REQUEST_CONTACTS_STATE -\u0026gt; { if (grantResults.isNotEmpty() \u0026amp;\u0026amp; grantResults[0] == PackageManager.PERMISSION_GRANTED) { Toast.makeText(this, \u0026#34;Permission granted\u0026#34;, Toast.LENGTH_SHORT).show() } else { Toast.makeText(this, \u0026#34;Permission denied\u0026#34;, Toast.LENGTH_SHORT).show() } } } }  All Done! Let’s see how this works\n   User denies the permission Rational dialog on next open          The user now sees a rationale dialog since the permission was previously denied and shouldShowRequestPermissionRationale for the given permission has now become true.\nOnce the user taps on the positive button, the app will request permissions again. Hopefully this time you have convinced your user on why the permission is required.\nHere is a Github link for the above project as a sample for your reference.\n PatilSiddhesh/android-permission-rationale  Cheers! We have successfully implemented rationale dialogs for permissions by following best practices.\n","href":"https://siddroid.com/post/post-android-rationale-permission-dialogs-2020/","title":"Better permissions on Android"}]